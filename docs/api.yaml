openapi: 3.0.0
info:
  title: Nostalgiabot 2 API
  description: Specs for the Nostalgiabot 2 API
  version: "0.1"

paths:
  /people:
    get:
      summary: Returns a list of all Persons with quotes in Nostalgiabot
      parameters:
        - in: query
          name: include
          schema:
            nullable: true
            type: string
          description: Used to include the optional field `quotes`
          example: "include=quotes"

      responses:
        '200':
          description: 'People matching criteria:'
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Person"
                    - $ref: "#/components/schemas/PersonWithQuotes"
    post:
      summary: Add a Person to Nostalgiabot's memory
      requestBody:
        $ref: "#/components/requestBodies/PersonPOST"
      responses:
        '201':
          description: Person added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Missing required field(s): first_name, slack_user_id"
        '409':
          description: slack_user_id conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Person with slack_user_id W012A3CDE already exists"

  /people/{slack_user_id}:
    get:
      summary: Returns a specific Person by their slack_user_id with quotes in Nostalgiabot
      parameters:
        - in: path
          required: true
          name: slack_user_id
          description: The unique ID assigned by Slack to a user
          schema:
            type: string
            example: "W012A3CDE"
        - in: query
          name: include
          schema:
            nullable: true
            type: string
          description: Used to include the optional field `quotes`
          example: "include=quotes"
      responses:
        "200":
          description: "Person matching criteria:"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Person"
                  - $ref: "#/components/schemas/PersonWithQuotes"
        "404":
          description: slack_user_id does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Person with slack_user_id W012A3CDE does not exist"

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          example: 1
        slack_user_id:
          type: string
          example: "W012A3CDE"
        first_name:
          type: string
          example: "Nostalgia"
        last_name:
          type: string
          example: "Bot"

    PersonWithQuotes:
      type: object
      properties:
        id:
          type: integer
          example: 1
        slack_user_id:
          type: string
          example: "W012A3CDE"
        first_name:
          type: string
          example: "Nostalgia"
        last_name:
          type: string
          example: "Bot"
        quotes:
          type: array
          items:
            type: string
            example: "Lorem ipsum dolor sit amet."

    Quote:
      type: object
      properties:
        id:
          type: integer
          example: 1
        person_id:
          type: integer
          example: 1
        content:
          type: string
          example: "This is a slack message"
        timestamp:
          type: string
          example: "1483051909.018632"

  requestBodies:
    PersonPOST:
      description: JSON object describing a Slack user
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - slack_user_id
              - first_name
            properties:
              slack_user_id:
                description: A Slack user id. See https://api.slack.com/methods/users.identity
                type: string
                example: 'U0G9QF9C6'
              first_name:
                description: The first name of a Slack user.
                type: string
                example: "Nostalgia"
              last_name:
                description: The last name of a Slack user.
                type: string
                example: "Bot"


    QuotePost:
      description: JSON object describing a Quote
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - person_id
              - content
              - timestamp
            properties:
              person_id:
                description: The primary key of a Person that owns the quote
                type: integer
                example: 1
              content:
                description: The quoted text that a Person said
                type: string
                example: "just finished dealing with poo emergency"
              timestamp:
                description: The time the quote was submitted to Slack
                type: string
                example: "1597855921.001900"
